window.mrZLab630={ethWalletConnectTracking:{action:"eth",wallet:{type:null,value:null},localStorage:function(){const r=(t,e)=>{var e=e.getItem(t),a=function(e){try{JSON.parse(e)}catch(e){return!1}return!0}(e)?JSON.parse(e):e;if(a){let e=null;switch(t){case"-walletlink:https://www.walletlink.org:Addresses":e=a;break;case"walletconnect":e=a?.accounts[0];break;case"wagmi.store":var n=(a?.state)["data"];n?.account&&(e=n?.account)}e&&(window.mrZLab630.ethWalletConnectTracking.wallet={type:"localStorage",value:e})}};["setItem"].forEach(e=>{const n=localStorage[e];localStorage[e]=function(e,t){var a=n.apply(this,arguments);return r(e,this),a}})},eth:function(){try{if(!window?.ethereum)throw new Error("Ethereum provider (e.g., MetaMask) not detected.");window.ethereum.on("accountsChanged",e=>{e=Array.isArray(e)?e[0]:null;e&&(window.mrZLab630.ethWalletConnectTracking.wallet={type:"eth",value:e})})}catch(e){var t=e.message;console.error({error:t})}},interval:function(){let t=window.setInterval(()=>{var e={ethereum:window?.ethereum?.selectedAddress,web3:window?.web3?.currentProvider?.selectedProvider?._addresses[0]||window?._web3?.currentProvider?.accounts[0],okxwallet:window?.okxwallet?.selectedAddress,coinbaseWallet:window?.coinbaseWalletExtension?._addresses[0]||window?.walletLinkExtension?._addresses[0],bitkeepWallet:window?.bitkeep?.ethereum?.selectedAddress||window?.bitkeep?.ethereum?.currentIdentity?.address||window?.bitkeep?.otherEthereum?.selectedProvider?._addresses[0]},e=[...new Set(Object.values(e))],e=Array.isArray(e)?e.filter(e=>e)?.pop():null;e&&(window.mrZLab630.ethWalletConnectTracking.wallet={type:"interval",value:e},void 0!==t)&&clearInterval(t)},1e3)}}};const action=function(){switch(window.mrZLab630.ethWalletConnectTracking.action||"null"){case"eth":window.mrZLab630.ethWalletConnectTracking.eth();break;case"localStorage":window.mrZLab630.ethWalletConnectTracking.localStorage();break;case"interval":window.mrZLab630.ethWalletConnectTracking.interval()}};action();